eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"ui/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n      namespace: \'api/v1\',\n      host: \'http://localhost:3100\'\n    });\n  });//# sourceURL=ui/adapters/application.js");

;eval("define(\"ui/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ui/app.js");

;eval("define(\"ui/components/lf-overlay\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n      tagName: \'span\',\n      classNames: [\'lf-overlay\'],\n      didInsertElement: function() {\n        Ember.$(\'body\').addClass(\'lf-modal-open\');\n      },\n      willDestroy: function() {\n        Ember.$(\'body\').removeClass(\'lf-modal-open\');\n      },\n      click: function() {\n        this.sendAction(\'clickAway\');\n      }\n    });\n  });//# sourceURL=ui/components/lf-overlay.js");

;eval("define(\"ui/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'liquid-modal\'],\n      currentContext: Ember.computed.oneWay(\'owner.modalContexts.lastObject\'),\n\n      owner: null, // set by injection\n\n      innerView: Ember.computed(\'currentContext\', function() {\n        var self = this,\n            current = this.get(\'currentContext\'),\n            name = current.get(\'name\'),\n            container = this.get(\'container\'),\n            component = container.lookup(\'component-lookup:main\').lookupFactory(name);\n        Ember.assert(\"Tried to render a modal using component \'\" + name + \"\', but couldn\'t find it.\", !!component);\n\n        var args = Ember.copy(current.get(\'params\'));\n\n        args.registerMyself = Ember.on(\'init\', function() {\n          self.set(\'innerViewInstance\', this);\n        });\n\n        // set source so we can bind other params to it\n        args._source = Ember.computed(function() {\n          return current.get(\"source\");\n        });\n\n        var otherParams = current.get(\"options.otherParams\");\n        var from, to;\n        for (from in otherParams) {\n          to = otherParams[from];\n          args[to] = Ember.computed.alias(\"_source.\"+from);\n        }\n\n        var actions = current.get(\"options.actions\") || {};\n\n        // Override sendAction in the modal component so we can intercept and\n        // dynamically dispatch to the controller as expected\n        args.sendAction = function(name) {\n          var actionName = actions[name];\n          if (!actionName) {\n            this._super.apply(this, Array.prototype.slice.call(arguments));\n            return;\n          }\n\n          var controller = current.get(\"source\");\n          var args = Array.prototype.slice.call(arguments, 1);\n          args.unshift(actionName);\n          controller.send.apply(controller, args);\n        };\n\n        return component.extend(args);\n      }),\n\n      actions: {\n        outsideClick: function() {\n          if (this.get(\'currentContext.options.dismissWithOutsideClick\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'outsideClick\');\n          }\n        },\n        escape: function() {\n          if (this.get(\'currentContext.options.dismissWithEscape\')) {\n            this.send(\'dismiss\');\n          } else {\n            proxyToInnerInstance(this, \'escape\');\n          }\n        },\n        dismiss: function() {\n          var source = this.get(\'currentContext.source\'),\n              proto = source.constructor.proto(),\n              params = this.get(\'currentContext.options.withParams\'),\n              clearThem = {};\n\n          for (var key in params) {\n            clearThem[key] = proto[key];\n          }\n          source.setProperties(clearThem);\n        }\n      }\n    });\n\n    function proxyToInnerInstance(self, message) {\n      var vi = self.get(\'innerViewInstance\');\n      if (vi) {\n        vi.send(message);\n      }\n    }\n  });//# sourceURL=ui/components/liquid-modal.js");

;eval("define(\"ui/components/lm-container\", \n  [\"ember\",\"liquid-fire/tabbable\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    /*\n       Parts of this file were adapted from ic-modal\n\n       https://github.com/instructure/ic-modal\n       Released under The MIT License (MIT)\n       Copyright (c) 2014 Instructure, Inc.\n    */\n\n    var Ember = __dependency1__[\"default\"];\n\n    /**\n     * If you do something to move focus outside of the browser (like\n     * command+l to go to the address bar) and then tab back into the\n     * window, capture it and focus the first tabbable element in an active\n     * modal.\n     */\n    var lastOpenedModal = null;\n    Ember.$(document).on(\'focusin\', handleTabIntoBrowser);\n\n    function handleTabIntoBrowser() {\n      if (lastOpenedModal) {\n        lastOpenedModal.focus();\n      }\n    }\n\n\n    __exports__[\"default\"] = Ember.Component.extend({\n      classNames: [\'lm-container\'],\n      attributeBindings: [\'tabindex\'],\n      tabindex: 0,\n\n      keyUp: function(event) {\n        // Escape key\n        if (event.keyCode === 27) {\n          this.sendAction();\n        }\n      },\n\n      keyDown: function(event) {\n        // Tab key\n        if (event.keyCode === 9) {\n          this.constrainTabNavigation(event);\n        }\n      },\n\n      didInsertElement: function() {\n        this.focus();\n        lastOpenedModal = this;\n      },\n\n      willDestroy: function() {\n        lastOpenedModal = null;\n      },\n\n      focus: function() {\n        if (this.get(\'element\').contains(document.activeElement)) {\n          // just let it be if we already contain the activeElement\n          return;\n        }\n        var target = this.$(\'[autofocus]\');\n        if (!target.length) {\n          target = this.$(\':tabbable\');\n        }\n\n        if (!target.length) {\n          target = this.$();\n        }\n\n        target[0].focus();\n      },\n\n      constrainTabNavigation: function(event) {\n        var tabbable = this.$(\':tabbable\');\n        var finalTabbable = tabbable[event.shiftKey ? \'first\' : \'last\']()[0];\n        var leavingFinalTabbable = (\n          finalTabbable === document.activeElement ||\n            // handle immediate shift+tab after opening with mouse\n            this.get(\'element\') === document.activeElement\n        );\n        if (!leavingFinalTabbable) { return; }\n        event.preventDefault();\n        tabbable[event.shiftKey ? \'last\' : \'first\']()[0].focus();\n      }\n    });\n  });//# sourceURL=ui/components/lm-container.js");

;eval("define(\"ui/controllers/login\", \n  [\"ember\",\"simple-auth/mixins/login-controller-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var LoginControllerMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend(LoginControllerMixin, {\n      authenticator: \'simple-auth-authenticator:devise\'\n    });\n  });//# sourceURL=ui/controllers/login.js");

;eval("define(\"ui/helpers/formatted-date\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    function formattedDate(input) {\n      return input;\n    }\n\n    __exports__.formattedDate = formattedDate;__exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(formattedDate);\n  });//# sourceURL=ui/helpers/formatted-date.js");

;eval("define(\"ui/helpers/liquid-bind\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* liquid-bind is really just liquid-with with a pre-provided block\n       that just says {{this}} */\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    function liquidBindHelperFunc() {\n      var options, container;\n\n      if (isHTMLBars) {\n        options = arguments[2];\n        container = this.container;\n      } else {\n        options = arguments[arguments.length - 1];\n        container = options.data.view.container;\n      }\n\n      var liquidWithSelf = container.lookupFactory(\'template:liquid-with-self\');\n      var liquidWith = container.lookupFactory(\'helper:liquid-with\');\n\n      if (isHTMLBars) {\n        options.template = liquidWithSelf;\n      } else {\n        options.fn = liquidWithSelf;\n      }\n\n      if (isHTMLBars) {\n        liquidWith.helperFunction.apply(this, arguments);\n      } else {\n        return liquidWith.apply(this, arguments);\n      }\n    }\n\n    var liquidBindHelper = liquidBindHelperFunc;\n    if (Ember.HTMLBars) {\n      liquidBindHelper = {\n        isHTMLBars: true,\n        helperFunction: liquidBindHelperFunc,\n        preprocessArguments: function() { }\n      };\n    }\n\n    __exports__[\"default\"] = liquidBindHelper;\n  });//# sourceURL=ui/helpers/liquid-bind.js");

;eval("define(\"ui/helpers/liquid-box\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-box is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=ui/helpers/liquid-box.js");

;eval("define(\"ui/helpers/liquid-if\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    function factory(invert) {\n      function helperFunc() {\n        var property, hash, options, env, container;\n\n        if (isHTMLBars) {\n          property = arguments[0][0];\n          hash = arguments[1];\n          options = arguments[2];\n          env = arguments[3];\n          container = this.container;\n        } else {\n          property = arguments[0];\n          options = arguments[1];\n          hash = options.hash;\n          container = options.data.view.container;\n        }\n        var View = container.lookupFactory(\'view:liquid-if\');\n\n        var templates = [options.fn || options.template, options.inverse];\n        if (invert) {\n          templates.reverse();\n        }\n        delete options.fn;\n        delete options.template;\n        delete options.inverse;\n\n        if (hash.containerless) {\n          View = View.extend(Ember._Metamorph);\n        }\n\n        hash.templates = templates;\n        hash.showFirstBinding = property;\n\n        if (isHTMLBars) {\n          env.helpers.view.helperFunction.call(this, [View], hash, options, env);\n        } else {\n          return Ember.Handlebars.helpers.view.call(this, View, options);\n        }\n      };\n\n      if (Ember.HTMLBars) {\n        return {\n          isHTMLBars: true,\n          helperFunction: helperFunc,\n          preprocessArguments: function() { }\n        }\n      } else {\n        return helperFunc;\n      }\n    }\n\n    __exports__.factory = factory;__exports__[\"default\"] = factory(false);\n  });//# sourceURL=ui/helpers/liquid-if.js");

;eval("define(\"ui/helpers/liquid-measure\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = function(){\n      Ember.assert(\"liquid-measure is deprecated, see CHANGELOG.md\", false);\n    }\n  });//# sourceURL=ui/helpers/liquid-measure.js");

;eval("define(\"ui/helpers/liquid-outlet\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    function liquidOutletHelperFunc(property, options) {\n      var property, options, container, hash, env;\n\n      if (isHTMLBars) {\n        property = arguments[0][0]; // params[0]\n        hash = arguments[1];\n        options = arguments[2];\n        env = arguments[3];\n        container = this.container;\n\n        if (!property) {\n          property = \'main\';\n          options.paramTypes = [\'string\'];\n        }\n      } else {\n        property = arguments[0];\n\n        if (property && property.data && property.data.isRenderData) {\n          options = property;\n          property = \'main\';\n          options.types.push(\'STRING\');\n        }\n\n        container = options.data.view.container;\n        hash = options.hash;\n      }\n\n      var View = container.lookupFactory(\'view:liquid-outlet\');\n      if (hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n      hash.viewClass = View;\n\n      if (isHTMLBars) {\n        env.helpers.outlet.helperFunction.call(this, [property], hash, options, env);\n      } else {\n        return Ember.Handlebars.helpers.outlet.call(this, property, options);\n      }\n    }\n\n    var liquidOutletHelper = liquidOutletHelperFunc;\n    if (Ember.HTMLBars) {\n      liquidOutletHelper = {\n        isHTMLBars: true,\n        helperFunction: liquidOutletHelperFunc,\n        preprocessArguments: function() { }\n      };\n    }\n\n    __exports__[\"default\"] = liquidOutletHelper;\n  });//# sourceURL=ui/helpers/liquid-outlet.js");

;eval("define(\"ui/helpers/liquid-unless\", \n  [\"ui/helpers/liquid-if\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var factory = __dependency1__.factory;\n    __exports__[\"default\"] = factory(true);\n  });//# sourceURL=ui/helpers/liquid-unless.js");

;eval("define(\"ui/helpers/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    function liquidWithHelperFunc() {\n      var params, context, options, container, innerOptions, data, hash, env;\n\n      var innerOptions = {\n        hashTypes: {}\n      };\n\n      var innerHash = {};\n\n      if (isHTMLBars) {\n        params = arguments[0]\n        hash = arguments[1];\n        options = arguments[2];\n        env = arguments[3];\n        context = params[0];\n        container = this.container;\n        data = arguments[3].data;\n        innerOptions.morph = options.morph;\n\n        if (params.length === 3) {\n          hash.keywordName = params[2]._label;\n          params = [context];\n        }\n      } else {\n        params = Array.prototype.slice.apply(arguments, [0, -1]);\n        context = arguments[0];\n        options = arguments[arguments.length-1];\n        data = options.data;\n        hash = options.hash;\n        container = data.view.container;\n        innerOptions.data = data;\n        innerOptions.hash = innerHash;\n      }\n\n      var View = container.lookupFactory(\'view:liquid-with\');\n\n      View = View.extend({\n        originalArgs: params,\n        originalHash: hash,\n        originalHashTypes: options.hashTypes,\n        innerTemplate: options.fn || options.template\n      });\n\n      if (hash.containerless) {\n        View = View.extend(Ember._Metamorph);\n      }\n\n      innerHash.boundContextBinding = context;\n\n      [\n        \'class\',\n        \'classNames\',\n        \'classNameBindings\',\n        \'use\',\n        \'id\',\n        \'growDuration\',\n        \'growPixelsPerSecond\',\n        \'growEasing\',\n        \'enableGrowth\',\n        \'containerless\'\n      ].forEach(function(field){\n        if (hash.hasOwnProperty(field)) {\n          innerHash[field] = hash[field];\n          innerOptions.hashTypes[field] = options.hashTypes ? options.hashTypes[field] : undefined;\n        }\n      });\n\n\n      if (isHTMLBars) {\n        env.helpers.view.helperFunction.call(this, [View], innerHash, innerOptions, env);\n      } else {\n        return Ember.Handlebars.helpers.view.call(this, View, innerOptions);\n      }\n    }\n\n    var liquidWithHelper = liquidWithHelperFunc;\n    if (isHTMLBars) {\n      liquidWithHelper = {\n        isHTMLBars: true,\n        helperFunction: liquidWithHelperFunc,\n        preprocessArguments: function() { }\n      };\n    }\n\n    __exports__[\"default\"] = liquidWithHelper;\n  });//# sourceURL=ui/helpers/liquid-with.js");

;eval("define(\"ui/helpers/with-apply\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    // This helper is internal to liquid-with.\n    function withApplyHelperFunc(options){\n      var hash, options, env, view;\n\n      if (isHTMLBars) {\n        hash = arguments[1];\n        options = arguments[2];\n        env = arguments[3];\n        view = this;\n      } else {\n        options = arguments[0];\n        hash = options.hash;\n        view = options.data.view;\n      }\n\n      var parent = view.get(\'liquidWithParent\');\n      var withArgs = parent.get(\'originalArgs\').slice();\n\n      withArgs[0] = \'lwith-view.boundContext\';\n      options = Ember.copy(options);\n\n      // This works to inject our keyword in Ember >= 1.9\n      if (!view._keywords) {\n        view._keywords = {};\n      }\n      view._keywords[\'lwith-view\'] = view;\n\n      // This works to inject our keyword in Ember < 1.9\n      if (!isHTMLBars) {\n        if (!options.data.keywords) {\n          options.data.keywords = {};\n        }\n        options.data.keywords[\'lwith-view\'] = view;\n      }\n\n      if (isHTMLBars) {\n        options.template = parent.get(\'innerTemplate\');\n      } else {\n        options.fn = parent.get(\'innerTemplate\');\n      }\n\n      hash = parent.get(\'originalHash\');\n      options.hashTypes = parent.get(\'originalHashTypes\');\n\n      if (isHTMLBars) {\n        env.helpers[\"with\"].helperFunction.call(this, withArgs, hash, options, env);\n      } else {\n        options.hash = hash;\n        withArgs.push(options);\n        return Ember.Handlebars.helpers[\"with\"].apply(this, withArgs);\n      }\n    }\n\n    var withApplyHelper = withApplyHelperFunc;\n    if (Ember.HTMLBars) {\n      withApplyHelper = {\n        isHTMLBars: true,\n        helperFunction: withApplyHelperFunc,\n        preprocessArguments: function() { }\n      };\n    }\n\n    __exports__[\"default\"] = withApplyHelper;\n  });//# sourceURL=ui/helpers/with-apply.js");

;eval("define(\"ui/initializers/export-application-global\", \n  [\"ember\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=ui/initializers/export-application-global.js");

;eval("define(\"ui/initializers/feature_manager\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var FeatureManagerInitializer;\n\n    FeatureManagerInitializer = {\n      name: \'feature-manager\',\n      initialize: function(container, app) {\n        return app.inject(\'controller\', \'featureManager\', \'service:featureManager\');\n      }\n    };\n\n    __exports__[\"default\"] = FeatureManagerInitializer;;\n  });//# sourceURL=ui/initializers/feature_manager.js");

;eval("define(\"ui/initializers/liquid-fire\", \n  [\"liquid-fire\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var initialize = __dependency1__.initialize;\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'liquid-fire\',\n\n      initialize: function(container) {\n        if (!Ember.$.Velocity) {\n          Ember.warn(\"Velocity.js is missing\");\n        } else {\n          var version = Ember.$.Velocity.version;\n          var recommended = [0, 11, 8];\n          if (Ember.compare(recommended, [version.major, version.minor, version.patch]) === 1) {\n            Ember.warn(\"You should probably upgrade Velocity.js, recommended minimum is \" + recommended.join(\'.\'));\n          }\n        }\n\n        initialize(container);\n      }\n    };\n  });//# sourceURL=ui/initializers/liquid-fire.js");

;eval("define(\"ui/initializers/simple-auth-devise\", \n  [\"simple-auth-devise/configuration\",\"simple-auth-devise/authenticators/devise\",\"simple-auth-devise/authorizers/devise\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Configuration = __dependency1__[\"default\"];\n    var Authenticator = __dependency2__[\"default\"];\n    var Authorizer = __dependency3__[\"default\"];\n    var ENV = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name:       \'simple-auth-devise\',\n      before:     \'simple-auth\',\n      initialize: function(container, application) {\n        Configuration.load(container, ENV[\'simple-auth-devise\'] || {});\n        container.register(\'simple-auth-authorizer:devise\', Authorizer);\n        container.register(\'simple-auth-authenticator:devise\', Authenticator);\n      }\n    };\n  });//# sourceURL=ui/initializers/simple-auth-devise.js");

;eval("define(\"ui/initializers/simple-auth\", \n  [\"simple-auth/configuration\",\"simple-auth/setup\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Configuration = __dependency1__[\"default\"];\n    var setup = __dependency2__[\"default\"];\n    var ENV = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name:       \'simple-auth\',\n      initialize: function(container, application) {\n        Configuration.load(container, ENV[\'simple-auth\'] || {});\n        setup(container, application);\n      }\n    };\n  });//# sourceURL=ui/initializers/simple-auth.js");

;eval("define(\"ui/models/contact\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      firstName: DS.attr(\'string\'),\n      lastName: DS.attr(\'string\'),\n      email: DS.attr(\'string\'),\n      title: DS.attr(\'string\'),\n      createdAt: DS.attr(\'date\'),\n      updatedAt: DS.attr(\'date\')\n    });\n  });//# sourceURL=ui/models/contact.js");

;eval("define(\"ui/router\", \n  [\"ember\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var config = __dependency2__[\"default\"];\n\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\'contacts\', function() {\n        return this.resource(\'contact\', {\n          path: \'/:contact_id\'\n        });\n      });\n      this.route(\'foo\');\n      return this.route(\'login\');\n    });\n\n    __exports__[\"default\"] = Router;;\n  });//# sourceURL=ui/router.js");

;eval("define(\"ui/routes/application\", \n  [\"ember\",\"simple-auth/mixins/application-route-mixin\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationRouteMixin = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend(ApplicationRouteMixin);\n  });//# sourceURL=ui/routes/application.js");

;eval("define(\"ui/routes/contact\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function(params) {\n        return this.store.find(\'contact\', params.contact_id);\n      }\n    });\n  });//# sourceURL=ui/routes/contact.js");

;eval("define(\"ui/routes/contacts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function() {\n        return this.store.find(\'contact\');\n      }\n    });\n  });//# sourceURL=ui/routes/contacts/index.js");

;eval("define(\"ui/routes/foo\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var FooRoute;\n\n    FooRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = FooRoute;\n  });//# sourceURL=ui/routes/foo.js");

;eval("define(\"ui/services/feature_manager\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var FeatureManager;\n\n    FeatureManager = Ember.Object.extend({\n      init: function() {\n        var _ref, _ref1;\n        this._super();\n        this.set(\'SHOW_PONY\', ((_ref = window.ENV) != null ? _ref.SHOW_PONY : void 0) || false);\n        this.set(\'AB\', ((_ref1 = window.ENV) != null ? _ref1.AB : void 0) || \'A\');\n        this.set(\'isMarketer\', this.get(\'AB\') === \'A\');\n        return this.set(\'isEducator\', !this.get(\'isMarketer\'));\n      }\n    });\n\n    __exports__[\"default\"] = FeatureManager;;\n  });//# sourceURL=ui/services/feature_manager.js");

;eval("define(\"ui/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n  <a href=\'\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"invalidateSession\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Logout</a>\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"login\", options) : helperMissing.call(depth0, \"link-to\", \"login\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"Login\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n<div>\\n<a href=\\\"assets/test.png\\\"><img src=\\\"assets/test.png\\\" /></a>\\n</div>\\n\");\n      }\n\n      data.buffer.push(\"<h2>Babylon</h2>\\n\\n<ul>\\n  <li>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Home\", \"index\", options) : helperMissing.call(depth0, \"link-to\", \"Home\", \"index\", options))));\n      data.buffer.push(\"</li>\\n  <li>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data},helper ? helper.call(depth0, \"Contacts\", \"contacts\", options) : helperMissing.call(depth0, \"link-to\", \"Contacts\", \"contacts\", options))));\n      data.buffer.push(\"</li>\\n</ul>\\n\\n<hr>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"liquid-outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"stop-watch\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"session.isAuthenticated\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"featureManager.SHOW_PONY\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"featureManager.SHOW_PONY\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/application.js");

;eval("define(\"ui/templates/components/liquid-modal\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n  \");\n      stack1 = (helper = helpers[\'lm-container\'] || (depth0 && depth0[\'lm-container\']),options={hash:{\n        \'action\': (\"escape\")\n      },hashTypes:{\'action\': \"STRING\"},hashContexts:{\'action\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lm-container\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":lf-dialog cc.options.dialogClass\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" role=\\\"dialog\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'aria-labelledby\': (\"cc.options.ariaLabelledBy\"),\n        \'aria-label\': (\"cc.options.ariaLabel\")\n      },hashTypes:{\'aria-labelledby\': \"STRING\",\'aria-label\': \"STRING\"},hashContexts:{\'aria-labelledby\': depth0,\'aria-label\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n      \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"innerView\", {hash:{\n        \'dismiss\': (\"dismiss\")\n      },hashTypes:{\'dismiss\': \"STRING\"},hashContexts:{\'dismiss\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers[\'lf-overlay\'] || (depth0 && depth0[\'lf-overlay\']),options={hash:{\n        \'clickAway\': (\"outsideClick\")\n      },hashTypes:{\'clickAway\': \"STRING\"},hashContexts:{\'clickAway\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"lf-overlay\", options))));\n      data.buffer.push(\"\\n  \");\n      return buffer;\n      }\n\n      stack1 = (helper = helpers[\'liquid-with\'] || (depth0 && depth0[\'liquid-with\']),options={hash:{\n        \'class\': (\"lm-with\"),\n        \'containerless\': (true)\n      },hashTypes:{\'class\': \"STRING\",\'containerless\': \"BOOLEAN\"},hashContexts:{\'class\': depth0,\'containerless\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"currentContext\", \"as\", \"cc\", options) : helperMissing.call(depth0, \"liquid-with\", \"currentContext\", \"as\", \"cc\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/components/liquid-modal.js");

;eval("define(\"ui/templates/contact\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1>\");\n      stack1 = helpers._triageMustache.call(depth0, \"firstName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"lastName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n\\n<dl>\\n  <dt>Email</dt>\\n  <dd>\");\n      stack1 = helpers._triageMustache.call(depth0, \"email\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</dd>\\n\\n  <dt>Title</dt>\\n  <dd>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</dd>\\n</dl>\\n\\n<p>\\n  Updated at: \");\n      data.buffer.push(escapeExpression((helper = helpers[\'formatted-date\'] || (depth0 && depth0[\'formatted-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"updatedAt\", \"MMMM Do, YYYY [at] h:mm a\", options) : helperMissing.call(depth0, \"formatted-date\", \"updatedAt\", \"MMMM Do, YYYY [at] h:mm a\", options))));\n      data.buffer.push(\"\\n  <br>\\n  Created at: \");\n      data.buffer.push(escapeExpression((helper = helpers[\'formatted-date\'] || (depth0 && depth0[\'formatted-date\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"createdAt\", \"MMMM Do, YYYY [at] h:mm a\", options) : helperMissing.call(depth0, \"formatted-date\", \"createdAt\", \"MMMM Do, YYYY [at] h:mm a\", options))));\n      data.buffer.push(\"\\n</p>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/contact.js");

;eval("define(\"ui/templates/contacts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n    <li>\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"contact\", \"\", options) : helperMissing.call(depth0, \"link-to\", \"contact\", \"\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n      \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"stop-watch\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n    </li>\\n  \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"lastName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\",\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"firstName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n    <li>No contacts found.</li>\\n  \");\n      }\n\n      data.buffer.push(\"<ul>\\n  \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n\\n\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"select\", {hash:{\n        \'content\': (\"model\"),\n        \'optionLabelPath\': (\"content.email\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'prompt\': (\"Pick a person:\"),\n        \'selection\': (\"selectedPerson\")\n      },hashTypes:{\'content\': \"ID\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'prompt\': \"STRING\",\'selection\': \"ID\"},hashContexts:{\'content\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'prompt\': depth0,\'selection\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/contacts/index.js");

;eval("define(\"ui/templates/foo\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/foo.js");

;eval("define(\"ui/templates/liquid-with-self\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/liquid-with-self.js");

;eval("define(\"ui/templates/liquid-with\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"with-apply\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/liquid-with.js");

;eval("define(\"ui/templates/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<form \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"authenticate\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n  <label for=\\\"identification\\\">Login</label>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"identification\"),\n        \'placeholder\': (\"Enter Login\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  <label for=\\\"password\\\">Password</label>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"password\"),\n        \'placeholder\': (\"Enter Password\"),\n        \'type\': (\"password\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  <button type=\\\"submit\\\">Login</button>\\n</form>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/login.js");

;eval("define(\"ui/templates/stop-watch\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<br><br><br><br><br>\\n<hr>\\nThis is a view called \");\n      stack1 = helpers._triageMustache.call(depth0, \"view.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });//# sourceURL=ui/templates/stop-watch.js");

;eval("define(\"ui/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/adapters/application.jshint.js");

;eval("define(\"ui/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/app.jshint.js");

;eval("define(\"ui/tests/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/login.js should pass jshint\', function() { \n      ok(true, \'controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/controllers/login.jshint.js");

;eval("define(\"ui/tests/helpers/formatted-date.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/formatted-date.js should pass jshint\', function() { \n      ok(true, \'helpers/formatted-date.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/helpers/formatted-date.jshint.js");

;eval("define(\"ui/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ui/tests/helpers/resolver.js");

;eval("define(\"ui/tests/helpers/start-app\", \n  [\"ember\",\"ui/app\",\"ui/router\",\"ui/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=ui/tests/helpers/start-app.js");

;eval("define(\"ui/tests/models/contact.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/contact.js should pass jshint\', function() { \n      ok(true, \'models/contact.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/models/contact.jshint.js");

;eval("define(\"ui/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/routes/application.jshint.js");

;eval("define(\"ui/tests/routes/contact.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/contact.js should pass jshint\', function() { \n      ok(true, \'routes/contact.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/routes/contact.jshint.js");

;eval("define(\"ui/tests/routes/contacts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/contacts\');\n    test(\'routes/contacts/index.js should pass jshint\', function() { \n      ok(true, \'routes/contacts/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/routes/contacts/index.jshint.js");

;eval("define(\"ui/tests/test-helper\", \n  [\"ui/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=ui/tests/test-helper.js");

;eval("define(\"ui/tests/transitions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'transitions.js should pass jshint\', function() { \n      ok(true, \'transitions.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/transitions.jshint.js");

;eval("define(\"ui/tests/ui/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/helpers\');\n    test(\'ui/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ui/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/helpers/resolver.jshint.js");

;eval("define(\"ui/tests/ui/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/helpers\');\n    test(\'ui/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ui/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/helpers/start-app.jshint.js");

;eval("define(\"ui/tests/ui/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests\');\n    test(\'ui/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ui/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/test-helper.jshint.js");

;eval("define(\"ui/tests/ui/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/unit/adapters\');\n    test(\'ui/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'ui/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"ui/tests/ui/tests/unit/helpers/formatted-date-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/unit/helpers\');\n    test(\'ui/tests/unit/helpers/formatted-date-test.js should pass jshint\', function() { \n      ok(true, \'ui/tests/unit/helpers/formatted-date-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/unit/helpers/formatted-date-test.jshint.js");

;eval("define(\"ui/tests/ui/tests/unit/models/contact-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/unit/models\');\n    test(\'ui/tests/unit/models/contact-test.js should pass jshint\', function() { \n      ok(true, \'ui/tests/unit/models/contact-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/unit/models/contact-test.jshint.js");

;eval("define(\"ui/tests/ui/tests/unit/routes/contact-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/unit/routes\');\n    test(\'ui/tests/unit/routes/contact-test.js should pass jshint\', function() { \n      ok(true, \'ui/tests/unit/routes/contact-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/unit/routes/contact-test.jshint.js");

;eval("define(\"ui/tests/ui/tests/unit/routes/contacts/index-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ui/tests/unit/routes/contacts\');\n    test(\'ui/tests/unit/routes/contacts/index-test.js should pass jshint\', function() { \n      ok(true, \'ui/tests/unit/routes/contacts/index-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/ui/tests/unit/routes/contacts/index-test.jshint.js");

;eval("define(\"ui/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=ui/tests/unit/adapters/application-test.js");

;eval("define(\"ui/tests/unit/helpers/formatted-date-test\", \n  [\"ui/helpers/formatted-date\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var formattedDate = __dependency1__.formattedDate;\n\n    module(\'FormattedDateHelper\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var result = formattedDate(42);\n      ok(result);\n    });\n  });//# sourceURL=ui/tests/unit/helpers/formatted-date-test.js");

;eval("define(\"ui/tests/unit/models/contact-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'contact\', \'Contact\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=ui/tests/unit/models/contact-test.js");

;eval("define(\"ui/tests/unit/routes/contact-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:contact\', \'ContactRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=ui/tests/unit/routes/contact-test.js");

;eval("define(\"ui/tests/unit/routes/contacts/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:contacts/index\', \'ContactsIndexRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=ui/tests/unit/routes/contacts/index-test.js");

;eval("define(\"ui/tests/unit/routes/foo-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\'route:foo\', \'FooRoute\', {});\n\n    test(\'it exists\', function() {\n      var route;\n      route = this.subject();\n      return ok(route);\n    });\n  });//# sourceURL=ui/tests/unit/routes/foo-test.js");

;eval("define(\"ui/tests/views/stop-watch.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/stop-watch.js should pass jshint\', function() { \n      ok(true, \'views/stop-watch.js should pass jshint.\'); \n    });\n  });//# sourceURL=ui/tests/views/stop-watch.jshint.js");

;eval("define(\"ui/transitions\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = function(){\n      this.transition(\n        // this.fromRoute(\'contacts.index\'),\n        this.toRoute(\'contact\'),\n        this.use(\'toLeft\'),\n        this.reverse(\'toRight\')\n      );\n    }\n  });//# sourceURL=ui/transitions.js");

;eval("define(\"ui/transitions/cross-fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET cross-fade-definition\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function crossFade(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {opacity: 0}, opts),\n          animate(newView, {opacity: [1, 0]}, opts)\n        ]);\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=ui/transitions/cross-fade.js");

;eval("define(\"ui/transitions/fade\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // BEGIN-SNIPPET fade-definition\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n    var timeSpent = __dependency1__.timeSpent;\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    __exports__[\"default\"] = function fade(oldView, insertNewView, opts) {\n      var firstStep,\n          outOpts = opts;\n\n      if (isAnimating(oldView, \'fade-out\')) {\n        // if the old view is already fading out, let it finish.\n        firstStep = finish(oldView, \'fade-out\');\n      } else {\n        if (isAnimating(oldView, \'fade-in\')) {\n          // if the old view is partially faded in, scale its fade-out\n          // duration appropriately.\n          outOpts = { duration: timeSpent(oldView, \'fade-in\') };\n        }\n        stop(oldView);\n        firstStep = animate(oldView, {opacity: 0}, outOpts, \'fade-out\');\n      }\n\n      return firstStep.then(insertNewView).then(function(newView){\n        return animate(newView, {opacity: [1, 0]}, opts, \'fade-in\');\n      });\n    }\n    // END-SNIPPET\n  });//# sourceURL=ui/transitions/fade.js");

;eval("define(\"ui/transitions/flex-grow\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var animate = __dependency1__.animate;\n    var stop = __dependency1__.stop;\n    var Promise = __dependency1__.Promise;\n    __exports__[\"default\"] = function flexGrow(oldView, insertNewView, opts) {\n      stop(oldView);\n      return insertNewView().then(function(newView) {\n        return Promise.all([\n          animate(oldView, {\'flex-grow\': 0}, opts),\n          animate(newView, {\'flex-grow\': [1, 0]}, opts)\n        ]);\n      });\n    }\n  });//# sourceURL=ui/transitions/flex-grow.js");

;eval("define(\"ui/transitions/modal-popup\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var Velocity = Ember.$.Velocity;\n\n    function hideModal(oldView) {\n      var box, obscure;\n      if (!oldView ||\n          !(box = oldView.$(\'.lm-container > div\')) ||\n          !(box = box[0]) ||\n          !(obscure = oldView.$(\'.lf-overlay\')) ||\n          !(obscure = obscure[0])) {\n        return Promise.resolve();\n      }\n\n      return Promise.all([\n        Velocity.animate(obscure, {opacity: [0, 0.5]}, {duration: 250}),\n        Velocity.animate(box, {scale: [0, 1]}, {duration: 250})\n      ]);\n    }\n\n    function revealModal(insertNewView) {\n      return insertNewView().then(function(newView){\n        var box, obscure;\n        if (!newView ||\n            !(box = newView.$(\'.lm-container > div\')[0]) ||\n            !(obscure = newView.$(\'.lf-overlay\')[0])) {\n          return;\n        }\n\n        // we\'re not going to animate the whole view, rather we\'re going\n        // to animate two pieces of it separately. So we move the view\n        // properties down onto the individual elements, so that the\n        // animate function can reveal them at precisely the right time.\n        Ember.$(box).css({\n          display: \'none\'\n        });\n\n        Ember.$(obscure).css({\n          display: \'none\'\n        });\n        newView.$().css({\n          display: \'\',\n          visibility: \'\'\n        });\n\n        return Promise.all([\n          Velocity.animate(obscure, {opacity: [0.5, 0]}, {duration: 250, display: \'\'}),\n          Velocity.animate(box, {scale: [1, 0]}, {duration: 250, display: \'\'})\n        ]);\n      });\n    }\n\n    __exports__[\"default\"] = function modalPopup(oldView, insertNewView) {\n      return hideModal(oldView).then(function() {\n        return revealModal(insertNewView);\n      });\n    }\n  });//# sourceURL=ui/transitions/modal-popup.js");

;eval("define(\"ui/transitions/move-over\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var stop = __dependency1__.stop;\n    var animate = __dependency1__.animate;\n    var Promise = __dependency1__.Promise;\n    var isAnimating = __dependency1__.isAnimating;\n    var finish = __dependency1__.finish;\n\n    __exports__[\"default\"] = function moveOver(oldView, insertNewView, dimension, direction, opts) {\n      var oldParams = {},\n          newParams = {},\n          firstStep,\n          property,\n          measure;\n\n      if (dimension.toLowerCase() === \'x\') {\n        property = \'translateX\';\n        measure = \'width\';\n      } else {\n        property = \'translateY\';\n        measure = \'height\';\n      }\n\n      if (isAnimating(oldView, \'moving-in\')) {\n        firstStep = finish(oldView, \'moving-in\');\n      } else {\n        stop(oldView);\n        firstStep = Promise.resolve();\n      }\n\n\n      return firstStep.then(insertNewView).then(function(newView){\n        if (newView && newView.$() && oldView && oldView.$()) {\n          var sizes = [parseInt(newView.$().css(measure), 10),\n                       parseInt(oldView.$().css(measure), 10)];\n          var bigger = Math.max.apply(null, sizes);\n          oldParams[property] = (bigger * direction) + \'px\';\n          newParams[property] = [\"0px\", (-1 * bigger * direction) + \'px\'];\n        } else {\n          oldParams[property] = (100 * direction) + \'%\';\n          newParams[property] = [\"0%\", (-100 * direction) + \'%\'];\n        }\n\n        return Promise.all([\n          animate(oldView, oldParams, opts),\n          animate(newView, newParams, opts, \'moving-in\')\n        ]);\n      });\n    }\n  });//# sourceURL=ui/transitions/move-over.js");

;eval("define(\"ui/transitions/scroll-then\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function() {\n      Ember.assert(\n        \"You must provide a transition name as the first argument to scrollThen. Example: this.use(\'scrollThen\', \'toLeft\')\",\n        \'string\' === typeof arguments[2]\n      );\n\n      var el = document.getElementsByTagName(\'html\'),\n          transitionArgs = Array.prototype.slice.call(arguments, 0, 2),\n          nextTransition = this.lookup(arguments[2]),\n          self = this,\n          options = arguments[3] || {};\n\n      Ember.assert(\n        \"The second argument to scrollThen is passed to Velocity\'s scroll function and must be an object\",\n        \'object\' === typeof options\n      );\n\n      // set scroll options via: this.use(\'scrollThen\', \'ToLeft\', {easing: \'spring\'})\n      options = Ember.merge({duration: 500, offset: 0}, options);\n\n      // additional args can be passed through after the scroll options object\n      // like so: this.use(\'scrollThen\', \'moveOver\', {duration: 100}, \'x\', -1);\n      transitionArgs.push.apply(transitionArgs, Array.prototype.slice.call(arguments, 4));\n\n      return window.$.Velocity(el, \'scroll\', options).then(function() {\n        nextTransition.apply(self, transitionArgs);\n      });\n    }\n  });//# sourceURL=ui/transitions/scroll-then.js");

;eval("define(\"ui/transitions/to-down\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', 1);\n  });//# sourceURL=ui/transitions/to-down.js");

;eval("define(\"ui/transitions/to-left\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', -1);\n  });//# sourceURL=ui/transitions/to-left.js");

;eval("define(\"ui/transitions/to-right\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'x\', 1);\n  });//# sourceURL=ui/transitions/to-right.js");

;eval("define(\"ui/transitions/to-up\", \n  [\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var curryTransition = __dependency1__.curryTransition;\n    __exports__[\"default\"] = curryTransition(\"move-over\", \'y\', -1);\n  });//# sourceURL=ui/transitions/to-up.js");

;eval("define(\"ui/views/liquid-child\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-child\'],\n      resolveInsertionPromise: Ember.on(\'didInsertElement\', function(){\n        // Children start out hidden and invisible.\n        // Measurement will `show` them and Velocity will make them visible.\n        // This prevents a flash of pre-animated content.\n        this.$().css({visibility: \'hidden\'}).hide();\n        if (this._resolveInsertion) {\n          this._resolveInsertion(this);\n        }\n      })\n    });\n  });//# sourceURL=ui/views/liquid-child.js");

;eval("define(\"ui/views/liquid-if\", \n  [\"ui/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    var isHTMLBars = !!Ember.HTMLBars;\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'showFirst\', function(){\n        var template = this.get(\'templates\')[this.get(\'showFirst\') ? 0 : 1];\n        if (!template || !isHTMLBars && template === Ember.Handlebars.VM.noop) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          template: template,\n          liquidParent: this,\n          contextBinding: \'liquidParent.context\',\n          liquidContext: this.get(\"showFirst\"),\n          hasLiquidContext: true\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=ui/views/liquid-if.js");

;eval("define(\"ui/views/liquid-outlet\", \n  [\"ember\",\"liquid-fire\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Promise = __dependency2__.Promise;\n    var animate = __dependency2__.animate;\n    var stop = __dependency2__.stop;\n    var capitalize = Ember.String.capitalize;\n\n    __exports__[\"default\"] = Ember.ContainerView.extend({\n      classNames: [\'liquid-container\'],\n      growDuration: 250,\n      growPixelsPerSecond: 200,\n      growEasing: \'slide\',\n      enableGrowth: true,\n\n      init: function(){\n        // The ContainerView constructor normally sticks our \"currentView\"\n        // directly into _childViews, but we want to leave that up to\n        // _currentViewDidChange so we have the opportunity to launch a\n        // transition.\n        this._super();\n        Ember.A(this._childViews).clear();\n\n        if (this.get(\'containerless\')) {\n          // This prevents Ember from throwing an assertion when we try to\n          // render as a virtual view.\n          this.set(\'innerClassNameBindings\', this.get(\'classNameBindings\'));\n          this.set(\'classNameBindings\', Ember.A());\n        }\n      },\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      //\n      // We need to stop it from destroying our outgoing child view\n      // prematurely.\n      _currentViewWillChange: Ember.beforeObserver(\'currentView\', function() {}),\n\n      // Deliberately overriding a private method from\n      // Ember.ContainerView!\n      _currentViewDidChange: Ember.on(\'init\', Ember.observer(\'currentView\', function() {\n        // Normally there is only one child (the view we\'re\n        // replacing). But sometimes there may be two children (because a\n        // transition is already in progress). In any case, we tell all of\n        // them to start heading for the exits now.\n\n        var oldView = this.get(\'childViews.lastObject\'),\n            newView = this.get(\'currentView\'),\n            firstTime;\n\n        // For the convenience of the transition rules, we explicitly\n        // track our first transition, which happens at initial render.\n        firstTime = !this._hasTransitioned;\n        this._hasTransitioned = true;\n\n        // Idempotence\n        if ((!oldView && !newView) ||\n            (oldView && oldView.get(\'currentView\') === newView) ||\n            (this._runningTransition &&\n             this._runningTransition.oldView === oldView &&\n             this._runningTransition.newContent === newView\n            )) {\n          return;\n        }\n\n        // `transitions` comes from dependency injection, see the\n        // liquid-fire app initializer.\n        var transition = this.get(\'transitions\').transitionFor(this, oldView, newView, this.get(\'use\'), firstTime);\n\n        if (this._runningTransition) {\n          this._runningTransition.interrupt();\n        }\n\n        this._runningTransition = transition;\n        transition.run()[\"catch\"](function(err){\n          // Force any errors through to the RSVP error handler, because\n          // of https://github.com/tildeio/rsvp.js/pull/278.  The fix got\n          // into Ember 1.7, so we can drop this once we decide 1.6 is\n          // EOL.\n          Ember.RSVP.Promise.resolve()._onerror(err);\n        });\n      })),\n\n      _liquidChildFor: function(content) {\n        if (content && !content.get(\'hasLiquidContext\')){\n          content.set(\'liquidContext\', content.get(\'context\'));\n        }\n        var LiquidChild = this.container.lookupFactory(\'view:liquid-child\');\n        var childProperties = {\n          currentView: content\n        };\n        if (this.get(\'containerless\')) {\n          childProperties.classNames = this.get(\'classNames\').without(\'liquid-container\');\n          childProperties.classNameBindings = this.get(\'innerClassNameBindings\');\n        }\n        return LiquidChild.create(childProperties);\n      },\n\n      _pushNewView: function(newView) {\n        if (!newView) {\n          return Promise.resolve();\n        }\n        var child = this._liquidChildFor(newView),\n            promise = new Promise(function(resolve) {\n              child._resolveInsertion = resolve;\n            });\n        this.pushObject(child);\n        return promise;\n      },\n\n      cacheSize: function() {\n        var elt = this.$();\n        if (elt) {\n          // Measure original size.\n          this._cachedSize = getSize(elt);\n        }\n      },\n\n      unlockSize: function() {\n        var self = this;\n        function doUnlock(){\n          var elt = self.$();\n          if (elt) {\n            elt.css({width: \'\', height: \'\'});\n          }\n        }\n        if (this._scaling) {\n          this._scaling.then(doUnlock);\n        } else {\n          doUnlock();\n        }\n      },\n\n      _durationFor: function(before, after) {\n        return Math.min(this.get(\'growDuration\'), 1000*Math.abs(before - after)/this.get(\'growPixelsPerSecond\'));\n      },\n\n      _adaptDimension: function(dimension, before, after) {\n        if (before[dimension] === after[dimension] || !this.get(\'enableGrowth\')) {\n          var elt = this.$();\n          if (elt) {\n            elt[dimension](after[dimension]);\n          }\n          return Promise.resolve();\n        } else {\n          // Velocity deals in literal width/height, whereas jQuery deals\n          // in box-sizing-dependent measurements.\n          var target = {};\n          target[dimension] = [\n            after[\'literal\'+capitalize(dimension)],\n            before[\'literal\'+capitalize(dimension)],\n          ];\n          return animate(this, target, {\n            duration: this._durationFor(before[dimension], after[dimension]),\n            queue: false,\n            easing: this.get(\'growEasing\')\n          });\n        }\n      },\n\n      adaptSize: function() {\n        stop(this);\n\n        var elt = this.$();\n        if (!elt) { return; }\n\n        // Measure new size.\n        var newSize = getSize(elt);\n        if (typeof(this._cachedSize) === \'undefined\') {\n          this._cachedSize = newSize;\n        }\n\n        // Now that measurements have been taken, lock the size\n        // before the invoking the scaling transition.\n        elt.width(this._cachedSize.width);\n        elt.height(this._cachedSize.height);\n\n        this._scaling = Promise.all([\n          this._adaptDimension(\'width\', this._cachedSize, newSize),\n          this._adaptDimension(\'height\', this._cachedSize, newSize),\n        ]);\n      }\n\n    });\n\n    // We\'re tracking both jQuery\'s box-sizing dependent measurements and\n    // the literal CSS properties, because it\'s nice to get/set dimensions\n    // with jQuery and not worry about boz-sizing *but* Velocity needs the\n    // raw values.\n    function getSize(elt) {\n      return {\n        width: elt.width(),\n        literalWidth: parseInt(elt.css(\'width\'),10),\n        height: elt.height(),\n        literalHeight: parseInt(elt.css(\'height\'),10)\n      };\n    }\n  });//# sourceURL=ui/views/liquid-outlet.js");

;eval("define(\"ui/views/liquid-with\", \n  [\"ui/views/liquid-outlet\",\"ember\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LiquidOutlet = __dependency1__[\"default\"];\n    var Ember = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = LiquidOutlet.extend({\n      liquidUpdate: Ember.on(\'init\', Ember.observer(\'boundContext\', function(){\n        var context = this.get(\'boundContext\');\n        if (Ember.isEmpty(context)) {\n          this.set(\'currentView\', null);\n          return;\n        }\n        var view = Ember._MetamorphView.create({\n          container: this.container,\n          templateName: \'liquid-with\',\n          boundContext: context,\n          liquidWithParent: this,\n          liquidContext: context,\n          hasLiquidContext: true,\n        });\n        this.set(\'currentView\', view);\n      }))\n\n    });\n  });//# sourceURL=ui/views/liquid-with.js");

;eval("define(\"ui/views/stop-watch\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      templateName: \'stop-watch\',\n      name: \"Bob\"\n    });\n  });//# sourceURL=ui/views/stop-watch.js");

/* jshint ignore:start */

define('ui/config/environment', ['ember'], function(Ember) {
  var prefix = 'ui';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("ui/tests/test-helper");
} else {
  require("ui/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
